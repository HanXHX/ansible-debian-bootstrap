---

- name: GROUP | Add groups to the system
  group: >
    name={{ item.name }}
    system={{ item.system | default('no') }}
  with_items:
    - "{{ dbs_groups }}"
  when: item.state is not defined or item.state == 'present'

- name: USER | Add users to the system
  user: >
    name={{ item.name }}
    shell={{ item.shell | default(omit) }}
    comment={{ item.comment | default('') }}
    groups={{ item.groups | default('') }}
    home={{ item.home | default(omit) }}
    createhome={{ item.createhome | default('yes') }}
    system={{ item.system | default('no') }}
    state={{ item.state | default('present') }}
    password={{ item.password | default(omit) }}
  with_items: "{{ dbs_users }}"
  register: u

- name: GROUP | Delete groups to the system
  group: >
    name={{ item.name }}
    state=absent
  with_items: "{{ dbs_groups }}"
  when: item.state is defined and item.state == 'absent'

- name: USER | Add to group
  user: >
    name={{ item.name }}
    group={{ item.group }}
  with_items: "{{ dbs_users }}"
  when: >
    item.group is defined and
    (item.state is not defined or item.state == 'present')

- name: AUTHORIZED_KEY | Install SSH public key to system users
  authorized_key: user="{{ item.0.name }}" key="{{ item.1 }}"
  with_subelements:
    - "{{ dbs_users }}"
    - ssh_keys
  when: item.0.state is not defined or item.0.state == 'present'

- name: TEMPLATE | Create sudoers file
  template: >
    src=etc/sudoers.d/ansible.j2
    dest=/etc/sudoers.d/ansible
    mode=0440
    validate='visudo -cf %s'
  when: u.changed

