---

- name: COPY | Configure APT no extra packages
  copy: src=etc/apt/apt.conf.d/90noextrapackages dest=/etc/apt/apt.conf.d/90noextrapackages

# We MUST update cache... Ansible auto install python-apt
- name: APT | Update
  apt: update_cache=yes cache_valid_time=3600

- name: FILE | Delete default repository (sources.list)
  file: path=/etc/apt/sources.list state=absent

- name: APT | Add repositories
  apt_repository: repo="deb {{ item }} {{ dbs_apt_components }}" state=present
  with_items:
    - "http://{{ dbs_apt_default_host }}/debian {{ ansible_distribution_release }}"
    - "http://{{ dbs_apt_default_host }}/debian {{ ansible_distribution_release }}-updates"
    - "http://{{ dbs_debian_backport_host }}/debian {{ ansible_distribution_release }}-backports"

- name: APT | Add src repositories
  apt_repository: repo="deb-src {{ item }} {{ dbs_apt_components }}" state="{{ 'present' if dbs_apt_use_src else 'absent' }}"
  with_items:
    - "http://{{ dbs_apt_default_host }}/debian {{ ansible_distribution_release }}"
    - "http://{{ dbs_apt_default_host }}/debian {{ ansible_distribution_release }}-updates"
    - "http://{{ dbs_debian_backport_host }}/debian {{ ansible_distribution_release }}-backports"

- name: APT | Install few packages
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=3600
  with_flattened:
    - dbs_packages
    - dbs_distro_packages

- name: APT | Install Intel Microcode if needed
  apt: pkg=intel-microcode state=latest default_release='{{ dbs_microcode_apt_distribution }}'
  when: ansible_processor[0].find('Intel') != -1 and ansible_architecture == 'x86_64'

- name: APT | Install AMD Microcode if needed
  apt: pkg=amd64-microcode  state=latest default_release='{{ dbs_microcode_apt_distribution }}'
  when: ansible_processor[0].find('AMD') != -1 and ansible_architecture == 'x86_64'
