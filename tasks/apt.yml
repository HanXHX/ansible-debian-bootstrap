---

- name: COPY | Configure APT no extra packages
  copy: src=etc/apt/apt.conf.d/90noextrapackages dest=/etc/apt/apt.conf.d/90noextrapackages

# We MUST update cache... Ansible auto install python-apt
- name: APT | Update
  apt: update_cache=yes cache_valid_time=3600

- name: FILE | Delete default repository (sources.list)
  file: path=/etc/apt/sources.list state=absent

- name: APT | Add Debian repository
  apt_repository: repo='deb http://{{ dbs_apt_default_host }}/debian {{ ansible_distribution_release }} main contrib non-free' state=present

- name: APT | Add Debian repository (src)
  apt_repository: repo='deb-src http://{{ dbs_apt_default_host }}/debian {{ ansible_distribution_release }} main contrib non-free' state=present

- name: APT | Add Debian-updates repository
  apt_repository: repo='deb http://{{ dbs_apt_default_host }}/debian {{ ansible_distribution_release }}-updates main contrib non-free' state=present

- name: APT | Add Debian-updates repository (src)
  apt_repository: repo='deb-src http://{{ dbs_apt_default_host }}/debian {{ ansible_distribution_release }}-updates main contrib non-free' state=present

- name: APT | Add Backports repository
  apt_repository: repo='deb http://{{ dbs_debian_backport_host }}/debian {{ ansible_distribution_release }}-backports main' state=present

- name: APT | Install few packages
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=3600
  with_flattened:
    - dbs_packages
    - dbs_distro_packages

- name: APT | Install Intel Microcode if needed
  apt: pkg=intel-microcode state=latest default_release='{{ dbs_microcode_apt_distribution }}'
  when: ansible_processor[0].find('Intel') != -1 and ansible_architecture == 'x86_64'

- name: APT | Install AMD Microcode if needed
  apt: pkg=amd64-microcode  state=latest default_release='{{ dbs_microcode_apt_distribution }}'
  when: ansible_processor[0].find('AMD') != -1 and ansible_architecture == 'x86_64'
